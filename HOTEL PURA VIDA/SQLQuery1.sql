CREATE DATABASE HOTEL_PURA_VIDA 
USE HOTEL_PURA_VIDA

CREATE TABLE CLIENTES
(
CLI_ID INT PRIMARY KEY IDENTITY NOT NULL,
CLI_NOMBRES VARCHAR(50) NOT NULL,
CLI_APELLIDOS VARCHAR(50) NOT NULL,
CLI_TIPO_DOCUMENTO VARCHAR(15),
CLI_N_DOCUMENTO VARCHAR(20 )UNIQUE,
CLI_FECHA_NAC DATE,
CLI_GENERO VARCHAR(15),
CLI_TELEFONO VARCHAR(10),
CLI_PAIS VARCHAR(50),
CLI_EMAIL VARCHAR(50)
)

CREATE TABLE EMPLEADOS
(
EMP_ID INT PRIMARY KEY IDENTITY NOT NULL,
EMP_NOMBRES VARCHAR(50) NOT NULL,
EMP_APELLIDOS VARCHAR(50) NOT NULL,
EMP_TIPO_DOCUMENTO VARCHAR(15) ,
EMP_N_DOCUMENTO VARCHAR(20) UNIQUE,
EMP_DIRECCION VARCHAR(50) ,
EMP_FECHA_NAC DATE,
EMP_FECHA_INGRESO DATE,
EMP_SUELDO MONEY,
EMP_GENERO VARCHAR(15),
EMP_TELEFONO VARCHAR(10),
EMP_TURNO VARCHAR(30),
EMP_USER VARCHAR(50) UNIQUE,
EMP_PASWORD VARCHAR(50),
EMP_ACCESO VARCHAR(50)
)

CREATE TABLE PAISES
( 
 PAIS_ID INT PRIMARY KEY IDENTITY NOT NULL,
 PAIS_NOMBRE VARCHAR(50) UNIQUE NOT NULL  
)

CREATE TABLE HOTELES
(
HOT_ID INT PRIMARY KEY IDENTITY NOT NULL,
HOT_NOMBRE VARCHAR(50) UNIQUE NOT NULL,
PAIS_ID INT NOT NULL,
CONSTRAINT FK_PAIS_ID FOREIGN KEY (PAIS_ID) REFERENCES PAISES(PAIS_ID)
)

CREATE TABLE HABITACIONES
(
HAB_ID INT PRIMARY KEY IDENTITY NOT NULL,
HAB_NUM INT UNIQUE NOT NULL,
HAB_PISO INT,
HAB_TIPO VARCHAR(50),
HAB_NUM_CAMAS INT,
HAB_PRECIO_DIARIO MONEY,
HAB_ESTADO VARCHAR(15) NOT NULL,
HOT_ID INT,
CONSTRAINT FK_HOT_ID FOREIGN KEY (HOT_ID) REFERENCES HOTELES(HOT_ID)
)

CREATE TABLE PRODUCTOS
(
PRO_ID INT PRIMARY KEY IDENTITY ,
PRO_NOMBRE VARCHAR(50) UNIQUE NOT null,
PRO_DESCRIPCION VARCHAR(300),
PRO_PRECIO MONEY,
)

CREATE TABLE RESERVA
(
RES_ID INT PRIMARY KEY IDENTITY ,
HAB_ID INT NOT NULL,
CLI_ID INT NOT NULL,
EMP_ID INT NOT NULL,
ESTADO_HAB VARCHAR(50) NOT NULL,
FECHA_RESERVACION DATE NOT NULL,
CHECKIN DATE NOT NULL,
CHECKOUT DATE NOT NULL,
N_NOCHES INT NOT NULL,
COSTO_NOCHES MONEY NOT NULL,
COSTO_TOTAL MONEY NOT NULL,
ESTADO_PAGO VARCHAR(50) NOT NULL ,
OBSERVACIONES VARCHAR(500),
CONSTRAINT FK_HAB_ID FOREIGN KEY (HAB_ID) REFERENCES HABITACIONES(HAB_ID),
CONSTRAINT FK_CLI_ID FOREIGN KEY (CLI_ID) REFERENCES CLIENTES(CLI_ID),
CONSTRAINT FK_EMP_ID FOREIGN KEY (EMP_ID) REFERENCES EMPLEADOS(EMP_ID)
)

CREATE TABLE SERVICIOS
(
SER_ID INT PRIMARY KEY IDENTITY NOT NULL,
SER_NOMBRE VARCHAR(50),
SER_DESCRIPCION VARCHAR(300),
SER_PRECIO MONEY 
)

CREATE TABLE GASTOS
(
GASTOS_ID INT PRIMARY KEY IDENTITY NOT NULL,
RES_ID INT ,
PRO_ID INT ,
CANT_PRO INT,
SER_ID INT ,
CANT_SER INT,
ESTADO VARCHAR(25) ,
CONSTRAINT FK_RES_ID  FOREIGN KEY (RES_ID) REFERENCES RESERVA(RES_ID),
CONSTRAINT FK_PRO_ID  FOREIGN KEY (PRO_ID) REFERENCES PRODUCTOS(PRO_ID),
CONSTRAINT FK_SER_ID  FOREIGN KEY (SER_ID) REFERENCES SERVICIOS(SER_ID),
)

Alter authorization on database::hotel_pura_vida to sa
 
 select *from HABITACIONES

  --BUSCAR CLIENTE POR APELLIDO
CREATE PROCEDURE CLI_BUSCAR_APELLIDO
@TEXTOBUSCAR VARCHAR(50)
AS
SELECT * FROM CLIENTES
WHERE CLI_APELLIDOS LIKE @TEXTOBUSCAR + '%'

--BUSCAR CLIENTE POR EMAIL
CREATE PROCEDURE CLI_BUSCAR_EMAIL
@TEXTOBUSCAR VARCHAR(50)
AS
SELECT * FROM CLIENTES
WHERE CLI_EMAIL LIKE @TEXTOBUSCAR + '%'

--BUSCAR CLIENTE POR FECHA DE NACIMIENTO
CREATE PROCEDURE CLI_BUSCAR_FECHA_NAC
@TEXTOBUSCAR DATE
AS
SELECT * FROM CLIENTES
WHERE CLI_FECHA_NAC =  @TEXTOBUSCAR 

--BUSCAR CLIENTE POR GENERO
CREATE PROCEDURE CLI_BUSCAR_GENERO
@TEXTOBUSCAR VARCHAR(50)
AS
SELECT * FROM CLIENTES
WHERE CLI_GENERO LIKE @TEXTOBUSCAR + '%'

--BUSCAR CLIENTE POR ID
CREATE PROCEDURE CLI_BUSCAR_ID
@TEXTOBUSCAR INT
AS
SELECT * FROM CLIENTES
WHERE CLI_ID = @TEXTOBUSCAR

--BUSCAR CLIENTE POR NUM DOCUMENTO
CREATE PROCEDURE CLI_BUSCAR_N_DOCUMENTO
@TEXTOBUSCAR VARCHAR(50)
AS
SELECT * FROM CLIENTES
WHERE CLI_N_DOCUMENTO LIKE @TEXTOBUSCAR + '%'
	
--BUSCAR CLIENTE POR NOMBRE
CREATE PROCEDURE CLI_BUSCAR_NOMBRE
@TEXTOBUSCAR VARCHAR(50)
AS
SELECT * FROM CLIENTES
WHERE CLI_NOMBRES LIKE @TEXTOBUSCAR + '%'	

---BUSCAR CLIENTE POR NOMBRE Y APELLIDO

CREATE PROCEDURE CLI_BUSCAR_NOMBRE_APELLIDO
@NOMBRES VARCHAR(50),
@APELLIDO VARCHAR(50)
AS
SELECT*FROM CLIENTES
WHERE CLI_NOMBRES LIKE @NOMBRES + '%' and CLI_APELLIDOS LIKE @APELLIDO + '%'

--BUSCAR CLIENTE POR PAIS
CREATE PROCEDURE CLI_BUSCAR_PAIS
@TEXTOBUSCAR VARCHAR(50),
@TEXTOBUSCAR2 VARCHAR(50)
AS
SELECT * FROM CLIENTES
WHERE CLI_PAIS LIKE @TEXTOBUSCAR + '%' or CLI_PAIS LIKE @TEXTOBUSCAR2 + '%' 

--BUSCAR CLIENTE POR NUMERO DE TELEFONO
CREATE PROCEDURE CLI_BUSCAR_TELEFONO
@TEXTOBUSCAR VARCHAR(50)
AS
SELECT * FROM CLIENTES
WHERE CLI_TELEFONO LIKE @TEXTOBUSCAR + '%'

--EDITAR CLIENTE
CREATE PROCEDURE CLI_EDITAR
@IDCLIENTE INT,
@NOMBRE VARCHAR (50),
@APELLIDOS VARCHAR (50),
@TIPO_DOC VARCHAR (50),
@NUM_DOC VARCHAR (50),
@FECHA_NAC DATE,
@GENERO VARCHAR (50),
@TELEFONO VARCHAR (50),
@PAIS VARCHAR (50),
@EMAIL VARCHAR (50)
AS
UPDATE CLIENTES SET CLI_NOMBRES=@NOMBRE, CLI_APELLIDOS=@APELLIDOS, CLI_TIPO_DOCUMENTO=@TIPO_DOC, CLI_N_DOCUMENTO=@NUM_DOC, CLI_FECHA_NAC=@FECHA_NAC, 
CLI_GENERO=@GENERO, CLI_TELEFONO=@TELEFONO, CLI_PAIS=@PAIS, CLI_EMAIL=@EMAIL
WHERE CLI_ID=@IDCLIENTE

--ELIMINAR CLIENTE
CREATE PROCEDURE CLI_ELIMINAR
@IDCLIENTE INT
AS
DELETE FROM CLIENTES
WHERE CLI_ID=@IDCLIENTE

--INSERTAR CLIENTE
CREATE PROCEDURE CLI_INSERTAR
@IDCLIENTE INT OUTPUT,
@NOMBRE VARCHAR (50),
@APELLIDOS VARCHAR (50),
@TIPO_DOC VARCHAR (50),
@NUM_DOC VARCHAR (50),
@FECHA_NAC DATE,
@GENERO VARCHAR (50),
@TELEFONO VARCHAR (50),
@PAIS VARCHAR (50),
@EMAIL VARCHAR (50)
AS
INSERT INTO CLIENTES (CLI_NOMBRES, CLI_APELLIDOS, CLI_TIPO_DOCUMENTO, CLI_N_DOCUMENTO, CLI_FECHA_NAC, CLI_GENERO, CLI_TELEFONO, CLI_PAIS, CLI_EMAIL)
VALUES (@NOMBRE, @APELLIDOS, @TIPO_DOC, @NUM_DOC, @FECHA_NAC, @GENERO, @TELEFONO, @PAIS, @EMAIL)

--MOSTRAR CLIENTES
CREATE PROCEDURE CLI_MOSTRAR
AS
SELECT TOP 100 * FROM CLIENTES
ORDER BY CLI_ID ASC

---PROCEDIMIENTO ALMACENADO DE EMPLEADO

--BUSCAR EMPLEADO POR GENERO
CREATE PROCEDURE EMP_BUSCAR_GENERO
@TEXTOBUSCAR VARCHAR(15)
AS
SELECT * FROM EMPLEADOS
WHERE EMP_GENERO LIKE @TEXTOBUSCAR + '%'

--BUSCAR EMPLEADO POR ID
CREATE PROCEDURE EMP_BUSCAR_ID
@TEXTOBUSCAR INT
AS
SELECT * FROM EMPLEADOS
WHERE EMP_ID = @TEXTOBUSCAR

--BUSCAR EMPLEADO POR NUMERO DE DOCUMENTO
CREATE PROCEDURE EMP_BUSCAR_N_DOCUMENTO
@TEXTOBUSCAR VARCHAR(20)
AS
SELECT * FROM EMPLEADOS
WHERE EMP_N_DOCUMENTO LIKE @TEXTOBUSCAR + '%'
	
--BUSCAR EMPLEADO POR NOMBRE
CREATE PROCEDURE EMP_BUSCAR_NOMBRE
@TEXTOBUSCAR VARCHAR(50),
@TEXTOBUSCARR VARCHAR(50)
AS
SELECT * FROM EMPLEADOS
WHERE EMP_NOMBRES LIKE @TEXTOBUSCAR + '%' AND EMP_APELLIDOS LIKE @TEXTOBUSCARR + '%'

--BUSCAR EMPLEADO POR TELEFONO
CREATE PROCEDURE EMP_BUSCAR_TELEFONO
@TEXTOBUSCAR VARCHAR(10)
AS
SELECT * FROM EMPLEADOS
WHERE EMP_TELEFONO LIKE @TEXTOBUSCAR + '%'

--BUSCAR EMPLEADO POR TURNO
CREATE PROCEDURE EMP_BUSCAR_TURNO
@TEXTOBUSCAR VARCHAR(15)
AS
SELECT * FROM EMPLEADOS
WHERE EMP_TURNO LIKE @TEXTOBUSCAR + '%'

--BUSCAR EMPLEADO POR USER
CREATE PROCEDURE EMP_BUSCAR_USER
@TEXTOBUSCAR VARCHAR(50)
AS
SELECT * FROM EMPLEADOS
WHERE EMP_USER LIKE @TEXTOBUSCAR + '%'

--EDITAR EMPLEADO
CREATE PROCEDURE EMP_EDITAR
@ID INT,
@NOMBRES VARCHAR(50),
@APELLIDOS VARCHAR(50),
@TIPODOC VARCHAR(50),
@NUMERODOC VARCHAR(20),
@DIRECCION VARCHAR(50),
@FECHANAC DATE,
@FECHAINGRESO DATE,
@SUELDO MONEY,
@GENERO VARCHAR(15),
@TELEFONO VARCHAR(10),
@TURNO VARCHAR(30),
@USER VARCHAR(50),
@PASWORD VARCHAR(50),
@ACCESO VARCHAR(50)
AS
UPDATE EMPLEADOS SET EMP_NOMBRES=@NOMBRES, EMP_APELLIDOS=@APELLIDOS, EMP_TIPO_DOCUMENTO=@TIPODOC, EMP_N_DOCUMENTO=@NUMERODOC, EMP_DIRECCION=@DIRECCION, EMP_FECHA_NAC=@FECHANAC, EMP_FECHA_INGRESO=@FECHAINGRESO, EMP_SUELDO=@SUELDO, EMP_GENERO=@GENERO, EMP_TURNO=@TURNO, EMP_USER=@USER, EMP_PASWORD=@PASWORD, EMP_ACCESO=@ACCESO
WHERE EMP_ID=@ID

--ELIMINAR EMPLEADO
CREATE PROCEDURE EMP_ELIMINAR
@ID INT
AS
DELETE FROM EMPLEADOS
WHERE EMP_ID=@ID

--INSERTAR EMPLEADO
CREATE PROCEDURE EMP_INSERTAR
@ID INT OUTPUT,
@NOMBRES VARCHAR(50),
@APELLIDOS VARCHAR(50),
@TIPODOC VARCHAR(50),
@NUMERODOC VARCHAR(20),
@DIRECCION VARCHAR(50),
@FECHANAC DATE,
@FECHAINGRESO DATE,
@SUELDO MONEY,
@GENERO VARCHAR(15),
@TELEFONO VARCHAR(10),
@TURNO VARCHAR(30),
@USER VARCHAR(50),
@PASWORD VARCHAR(50),
@ACCESO VARCHAR (50)
AS
INSERT INTO EMPLEADOS (EMP_NOMBRES, EMP_APELLIDOS, EMP_TIPO_DOCUMENTO, EMP_N_DOCUMENTO, EMP_DIRECCION, EMP_FECHA_NAC, EMP_FECHA_INGRESO, EMP_SUELDO, EMP_GENERO, EMP_TELEFONO, EMP_TURNO, EMP_USER, EMP_PASWORD, EMP_ACCESO)
VALUES (@NOMBRES, @APELLIDOS, @TIPODOC, @NUMERODOC, @DIRECCION, @FECHANAC, @FECHAINGRESO, @SUELDO, @GENERO, @TELEFONO, @TURNO,  @USER, @PASWORD, @ACCESO)

--MOSTRAR EMPLEADO
CREATE PROCEDURE EMP_MOSTRAR
AS
SELECT TOP 100 * FROM EMPLEADOS
ORDER BY EMP_ID ASC

--PROCEDIMIENTOS ALMACENADOS DE HABITACIONES

--EDITAR HABITACION
CREATE PROCEDURE HAB_EDITAR
@ID INT,
@NUM INT,
@PISO INT,
@TIPO VARCHAR(50),
@NUMCAMAS INT,
@PRECIO MONEY,
@ESTADO VARCHAR(15),
@HOTEL INT
AS
UPDATE HABITACIONES SET HAB_NUM=@NUM, HAB_PISO=@PISO, HAB_TIPO=@TIPO, HAB_NUM_CAMAS=@NUMCAMAS, HAB_PRECIO_DIARIO=@PRECIO, HAB_ESTADO=@ESTADO, HOT_ID=@HOTEL
WHERE HAB_ID=@ID

--ELIMINAR HABITACION
CREATE PROCEDURE HAB_ELIMINAR
@ID INT
AS
DELETE FROM HABITACIONES
WHERE HAB_ID=@ID

--INSERTAR HABITACION
CREATE PROCEDURE HAB_INSERTAR
@ID INT OUTPUT,
@NUM INT,
@PISO INT,
@TIPO VARCHAR(50),
@NUMCAMAS INT,
@PRECIO MONEY,
@ESTADO VARCHAR(15),
@HOTEL INT
AS
INSERT INTO HABITACIONES (HAB_NUM, HAB_PISO, HAB_TIPO, HAB_NUM_CAMAS, HAB_PRECIO_DIARIO, HAB_ESTADO, HOT_ID)
VALUES (@NUM, @PISO, @TIPO, @NUMCAMAS, @PRECIO, @ESTADO, @HOTEL)

--MOSTRAR HABITACIONES
CREATE PROCEDURE HAB_MOSTRAR
AS
SELECT * FROM HABITACIONES
ORDER BY HAB_NUM ASC
	
--MOSTRAR PRECIO MINIMO
CREATE PROCEDURE HAB_MOSTRAR_PRECIO_MIN
AS
SELECT* FROM HABITACIONES
WHERE HAB_PRECIO_DIARIO=
(select MIN(HAB_PRECIO_DIARIO)
from HABITACIONES)
	
--BUSCA EL TIPO DE HABITACION
CREATE PROCEDURE HAB_MOSTRAR_TIPO
@TEXTOBUSCAR VARCHAR(50)
AS
SELECT* FROM HABITACIONES
WHERE HAB_TIPO=@TEXTOBUSCAR
	
--PROCEDIMIENTOS ALMACENADOS DE RESERVACION

--EDITA LAS RESERVACIONES
CREATE PROCEDURE RES_EDITAR
@RES_ID INT,
@HAB_ID INT,
@CLI_ID INT,
@EMP_ID INT,
@ESTADO VARCHAR (50),
@FECHA_RESERVACION DATE,
@CHECKIN DATE,
@CHECKOUT DATE,
@N_NOCHES INT,
@COSTO_HAB MONEY,
@TOTAL MONEY,
@ESTADO_PAGO VARCHAR (50),
@OBSERVACIONES VARCHAR (600)
AS
UPDATE RESERVA SET HAB_ID=@HAB_ID, 
ESTADO_HAB=@ESTADO, CHECKIN=@CHECKIN, CHECKOUT=@CHECKOUT, N_NOCHES=@N_NOCHES, COSTO_NOCHES=@COSTO_HAB,
COSTO_TOTAL=@TOTAL, ESTADO_PAGO=@ESTADO_PAGO, OBSERVACIONES=@OBSERVACIONES
WHERE RES_ID=@RES_ID

--ELIMINA DATOS DE LA RESERVACION
CREATE PROCEDURE RES_ELIMINAR
@TEXTO_BUSCAR INT
AS
DELETE FROM RESERVA
WHERE RES_ID=@TEXTO_BUSCAR

---MUESTRA LA REERVACION DE LAS HABITACIONES DISPONIBLES 
CREATE PROCEDURE RES_HAB_DISPONIBLE
@FECHA_INICIO DATE,
@FECHA_FIN DATE
AS
SELECT  DISTINCT HAB_ID, HAB_NUM AS #HABITACION,HABITACIONES.HAB_TIPO, HAB_NUM_CAMAS, HAB_PRECIO_DIARIO AS PRECIO, HAB_ESTADO
FROM HABITACIONES
WHERE HABITACIONES.HAB_ID Not In 
(SELECT DISTINCT RESERVA.HAB_ID
FROM RESERVA
WHERE CHECKIN >= @FECHA_INICIO AND CHECKIN < @FECHA_FIN  OR CHECKOUT <= @FECHA_FIN AND CHECKOUT > @FECHA_INICIO)

---MUESTRA LAS HABITACIONES HABITACIONES NO DISPONIBLES
CREATE PROCEDURE RES_HAB_NO_DISPONIBLE
@FECHA_INICIO DATE,
@FECHA_FIN DATE
AS
SELECT DISTINCT RES_ID, HABITACIONES.HAB_ID, HAB_NUM AS #HABITACION,HABITACIONES.HAB_TIPO, HAB_NUM_CAMAS, HAB_PRECIO_DIARIO AS PRECIO, HAB_ESTADO,CHECKIN, CHECKOUT, FECHA_RESERVACION, N_NOCHES, CLIENTES.CLI_ID, CLI_NOMBRES, CLI_APELLIDOS, CLI_TIPO_DOCUMENTO, CLI_N_DOCUMENTO, CLI_FECHA_NAC, CLI_GENERO, CLI_TELEFONO, CLI_PAIS, CLI_EMAIL, EMPLEADOS.EMP_ID, EMP_NOMBRES, EMP_APELLIDOS, EMP_TURNO, RESERVA.ESTADO_HAB, COSTO_NOCHES, COSTO_TOTAL, RESERVA.ESTADO_PAGO, OBSERVACIONES
FROM RESERVA JOIN CLIENTES ON RESERVA.CLI_ID=CLIENTES.CLI_ID JOIN HABITACIONES ON RESERVA.HAB_ID=HABITACIONES.HAB_ID JOIN EMPLEADOS ON RESERVA.EMP_ID=EMPLEADOS.EMP_ID
WHERE CHECKIN >= @FECHA_INICIO AND CHECKIN < @FECHA_FIN  OR CHECKOUT <= @FECHA_FIN AND CHECKOUT > @FECHA_INICIO

---INSERTA LOS DATOS DE LAS RESERVACIONES
CREATE  PROCEDURE RES_INSERTAR
@RES_ID INT OUTPUT,
@HAB_ID INT,
@CLI_ID INT,
@EMP_ID INT,
@ESTADO VARCHAR (50),
@FECHA_RESERVACION DATE,
@CHECKIN DATE,
@CHECKOUT DATE,
@N_NOCHES INT,
@COSTO_HAB MONEY,
@TOTAL MONEY,
@ESTADO_PAGO VARCHAR (50),
@OBSERVACIONES VARCHAR (600)
AS
INSERT INTO RESERVA (HAB_ID, CLI_ID, EMP_ID, ESTADO_HAB,FECHA_RESERVACION, CHECKIN, CHECKOUT, N_NOCHES, COSTO_NOCHES, COSTO_TOTAL, ESTADO_PAGO, OBSERVACIONES)
Values (@HAB_ID, @CLI_ID, @EMP_ID, @ESTADO, @FECHA_RESERVACION, @CHECKIN, @CHECKOUT, @N_NOCHES, @COSTO_HAB, @TOTAL, @ESTADO_PAGO,@OBSERVACIONES)

---MUESTRA LOS DATOS DE LAS RESERVACIONES
CREATE PROCEDURE RES_MOSTRAR
AS
SELECT TOP 50 RES_ID, HABITACIONES.HAB_ID, HAB_NUM AS #HABITACION,HABITACIONES.HAB_TIPO, HAB_NUM_CAMAS, HAB_PRECIO_DIARIO AS PRECIO, HAB_ESTADO,CHECKIN, CHECKOUT, FECHA_RESERVACION, N_NOCHES, CLIENTES.CLI_ID, CLI_NOMBRES, CLI_APELLIDOS, CLI_TIPO_DOCUMENTO, CLI_N_DOCUMENTO, CLI_FECHA_NAC, CLI_GENERO, CLI_TELEFONO, CLI_PAIS, CLI_EMAIL, EMPLEADOS.EMP_ID, EMP_NOMBRES, EMP_APELLIDOS, EMP_TURNO, RESERVA.ESTADO_HAB, COSTO_NOCHES, COSTO_TOTAL, RESERVA.ESTADO_PAGO, OBSERVACIONES
from RESERVA, HABITACIONES, CLIENTES, EMPLEADOS
WHERE  HABITACIONES.HAB_ID= RESERVA.HAB_ID AND CLIENTES.CLI_ID=RESERVA.CLI_ID AND EMPLEADOS.EMP_ID=RESERVA.EMP_ID
order by RES_ID desc

---BUSCAR RESERVA POR CLIENTE
CREATE PROCEDURE RES_BUSCAR_CLIENTE
@NOMBRES VARCHAR(50),
@APELLIDO VARCHAR(50)
AS
SELECT RES_ID, HABITACIONES.HAB_ID, HAB_NUM AS #HABITACION,HABITACIONES.HAB_TIPO, HAB_NUM_CAMAS, HAB_PRECIO_DIARIO AS PRECIO, HAB_ESTADO,CHECKIN, CHECKOUT, FECHA_RESERVACION, N_NOCHES, CLIENTES.CLI_ID, CLI_NOMBRES, CLI_APELLIDOS, CLI_TIPO_DOCUMENTO, CLI_N_DOCUMENTO, CLI_FECHA_NAC, CLI_GENERO, CLI_TELEFONO, CLI_PAIS, CLI_EMAIL, EMPLEADOS.EMP_ID, EMP_NOMBRES, EMP_APELLIDOS, EMP_TURNO, RESERVA.ESTADO_HAB, COSTO_NOCHES, COSTO_TOTAL, RESERVA.ESTADO_PAGO, OBSERVACIONES
FROM RESERVA JOIN CLIENTES ON RESERVA.CLI_ID=CLIENTES.CLI_ID JOIN HABITACIONES ON RESERVA.HAB_ID=HABITACIONES.HAB_ID JOIN EMPLEADOS ON RESERVA.EMP_ID=EMPLEADOS.EMP_ID
WHERE CLI_NOMBRES LIKE @NOMBRES + '%' and CLI_APELLIDOS LIKE @APELLIDO + '%'


--BUSCAR RESERVA POR PAIS
CREATE PROCEDURE RES_BUSCAR_PAIS
@TEXTOBUSCAR1 VARCHAR(50),
@TEXTOBUSCAR2 VARCHAR(50)
AS
SELECT RES_ID, HABITACIONES.HAB_ID, HAB_NUM AS #HABITACION,HABITACIONES.HAB_TIPO, HAB_NUM_CAMAS, HAB_PRECIO_DIARIO AS PRECIO, HAB_ESTADO,CHECKIN, CHECKOUT, FECHA_RESERVACION, N_NOCHES, CLIENTES.CLI_ID, CLI_NOMBRES, CLI_APELLIDOS, CLI_TIPO_DOCUMENTO, CLI_N_DOCUMENTO, CLI_FECHA_NAC, CLI_GENERO, CLI_TELEFONO, CLI_PAIS, CLI_EMAIL, EMPLEADOS.EMP_ID, EMP_NOMBRES, EMP_APELLIDOS, EMP_TURNO, RESERVA.ESTADO_HAB, COSTO_NOCHES, COSTO_TOTAL, RESERVA.ESTADO_PAGO, OBSERVACIONES
FROM RESERVA JOIN CLIENTES ON RESERVA.CLI_ID=CLIENTES.CLI_ID JOIN HABITACIONES ON RESERVA.HAB_ID=HABITACIONES.HAB_ID JOIN EMPLEADOS ON RESERVA.EMP_ID=EMPLEADOS.EMP_ID
WHERE CLI_PAIS LIKE @TEXTOBUSCAR1 + '%' OR CLI_PAIS LIKE @TEXTOBUSCAR2 + '%'


---PROCEDIMIENTO ALMACENADO DE LOGIN
CREATE PROCEDURE SRLOGIN
@USUARIO VARCHAR(50),
@PASWORD VARCHAR(50)
AS
SELECT EMP_ID, EMP_APELLIDOS, EMP_NOMBRES, EMP_ACCESO
FROM EMPLEADOS
WHERE EMP_USER=@USUARIO AND EMP_PASWORD=@PASWORD

--PROCEDIMIENTOS ALMACENADOS HOTEL

--INSERTAR HOTEL
CREATE PROCEDURE HOT_INSERT
@ID INT OUTPUT,
@NOMBRE VARCHAR(50),
@PAIS VARCHAR (50)
AS
INSERT INTO HOTELES (HOT_NOMBRE, PAIS)
VALUES (@NOMBRE, @PAIS)

--ELIMINAR HOTEL
CREATE PROCEDURE HOT_ELIMINAR
@HOT_ID INT
AS
DELETE FROM HOTELES
WHERE HOT_ID=@HOT_ID

--MOSTRAR HOTELES
CREATE PROCEDURE HOT_MOSTRAR
AS
SELECT * FROM HOTELES

--BUSCAR HOTEL
CREATE PROCEDURE HOT_BUCAR
@NOMBRE VARCHAR (50),
@PAIS VARCHAR (50)
AS
SELECT*FROM HOTELES
WHERE HOT_NOMBRE LIKE @NOMBRE + '%' OR PAIS LIKE @PAIS + '%'

---PROCESOS DE SERVICIOS
 
      
--BUSCAR SERVICIO POR NOMBRE
CREATE PROCEDURE SER_BUSCAR_NOMBRE
@TEXTOBUSCAR VARCHAR(50)
AS
SELECT * FROM SERVICIOS
WHERE SER_NOMBRE LIKE @TEXTOBUSCAR + '%'
 
 
--EDITAR SERVICIOS
CREATE PROCEDURE SER_EDITAR
@SER_ID INT,
@SER_NOMBRE VARCHAR (50),
@SER_DESCRIPCION VARCHAR (50),
@SER_PRECIO MONEY
AS
UPDATE SERVICIOS SET SER_NOMBRE=@SER_NOMBRE, SER_DESCRIPCION=@SER_DESCRIPCION, SER_PRECIO=@SER_PRECIO
WHERE SER_ID=@SER_ID
 
--ELIMINAR SERVICIOS
CREATE PROCEDURE SER_ELIMINAR
@SER_ID INT
AS
DELETE FROM SERVICIOS
WHERE SER_ID=@SER_ID
 
--INSERTAR SERVICIOS
CREATE PROCEDURE SER_INSERTAR
@SER_ID INT OUTPUT,
@SER_NOMBRE VARCHAR (50),
@SER_DESCRIPCION VARCHAR (50),
@SER_PRECIO MONEY
AS
INSERT INTO SERVICIOS (SER_NOMBRE, SER_DESCRIPCION, SER_PRECIO)
VALUES (@SER_NOMBRE, @SER_DESCRIPCION, @SER_PRECIO)
 
--MOSTRAR SERVICIOS
CREATE PROCEDURE SER_MOSTRAR
AS
SELECT TOP 100 * FROM SERVICIOS
ORDER BY SER_ID ASC
 
 


select *from RESERVA
